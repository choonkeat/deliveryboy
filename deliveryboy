#!/usr/bin/env ruby
$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), "lib"))
require 'process/highlander/pid'
include Process::Highlander::PID # so there can only be one

require 'deliveryboy/loggable'
require 'deliveryboy/maildir'
require 'rubygems'
require 'tmail'
require 'net/smtp'
require 'ftools'
require 'logger'
require 'yaml'

class Deliveryboy
  include Loggable

  def initialize(config)
    Loggable.logger = (config["logger"]["path"].to_s.strip == "") ? Logger.new(STDOUT) : Logger.new(config["logger"]["path"])
    logger.level = config["logger"]["level"]
    @inbox  = Inbox.new(config["inbox"])
    @outbox = Outbox.new(config["outbox"])
    @hostname  = config["hostname"]
  end

  def run
    trap("INT") { logger.info "shutting down ..."; @inbox.terminated = @outbox.terminated = true; }
    logger.info "Ctrl-C to terminate"
    threads = [
      Thread.new { @inbox.run },
      Thread.new { @outbox.run },
    ]
    logger.debug "#{threads.length} threads #{threads.inspect} running ..."
    threads.collect {|t| t.join; logger.debug "thread #{t.inspect} done" }
    logger.debug "#{threads.length} threads done"
  end

  # to prettify logging output
  class Outbox < Maildir; end
  class Inbox < Maildir; end
end

Deliveryboy.new(YAML.load(IO.read("#{__FILE__}.yml"))).run
